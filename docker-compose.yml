version: "3.7"

services:
  api01: &api
    hostname: api01
    # image: erickmarx/rinha-2024-q1:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PORT=8081
    restart: "on-failure"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    network_mode: "host"
    stdin_open: false
    pull_policy: always
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "200MB"

  api02:
    <<: *api
    hostname: api02
    environment:
      - PORT=8082

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - api01
      - api02
    network_mode: "host"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"

  postgres:
    image: onjin/alpine-postgres
    # image: bitnami/postgresql:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=rinha
    volumes:
      - ./postgresql.conf:/docker-entrypoint-initdb.d/1_postgresql.conf
      - ./init.sql:/docker-entrypoint-initdb.d/2_init.sql
    extra_hosts:
      - host.docker.internal:host-gateway
    network_mode: "host"
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -N 50 -c shared_buffers=256MB
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "110MB"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d rinha -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
